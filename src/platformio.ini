; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

# enable this to make VSCode happy
[platformio]
#default_envs = R9MM_R9MINI_RX_NATIVE
#default_envs = R9MM_R9MINI_RX_STM32F301_STLINK
#default_envs = R9MM_R9MINI_RX_STM32F301_BetaflightPassthrough
#default_envs = R9M_TX_2018_STM32F301_OpenTX
#default_envs = ExpLRS_TX_V3_1W
#default_envs = TX_ESP32_WROOM_RFM95
#default_envs = RX_Mini_v0.1
include_dir = src

################################# TX CONFIGS ########################################

[env:TX_ExpLRS_V3_1W]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_esp32}
	-D TARGET_EXPRESSLRS_PCB_TX_V3
	-D TARGET_1000mW_MODULE
src_filter = ${common_env_data.src_tx} ${common_env_data.src_esp32}
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_ExpLRS_V3_100mW]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_esp32}
	-D TARGET_EXPRESSLRS_PCB_TX_V3
	-D TARGET_100mW_MODULE
src_filter = ${common_env_data.src_tx} ${common_env_data.src_esp32}
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_ExpLRS_V3_100mW_LEGACY]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_esp32}
	-D TARGET_EXPRESSLRS_PCB_TX_V3
	-D TARGET_EXPRESSLRS_PCB_TX_V3_LEGACY
	-D TARGET_100mW_MODULE
src_filter = ${common_env_data.src_tx} ${common_env_data.src_esp32}
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_TTGO_LORA_V1]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_esp32}
	-D TARGET_TTGO_LORA_V1_AS_TX
	-D TARGET_100mW_MODULE
src_filter = ${common_env_data.src_tx} ${common_env_data.src_esp32}
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_TTGO_LORA_V2]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_esp32}
	-D TARGET_TTGO_LORA_V2_AS_TX
	-D TARGET_100mW_MODULE
src_filter = ${common_env_data.src_tx} ${common_env_data.src_esp32}
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_ESP32_WROOM_RFM95]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 250000 # 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_esp32}
	-D TARGET_ESP32_WROOM_RFM95
	-D TARGET_100mW_MODULE
src_filter = ${common_env_data.src_tx} ${common_env_data.src_esp32}
extra_scripts = ${common_env_data.extra_scripts}

################################# RX CONFIGS ########################################

[env:RX_ExpLRS_V3]
platform = espressif8266@2.2.3
board = esp8285
framework = arduino
upload_speed = 921600
monitor_speed = 420000
monitor_dtr = 0
monitor_rts = 0
build_unflags = -Os
build_flags =
	${common_env_data.flags_rx}
	${common_env_data.flags_esp82xx}
	-D TARGET_EXPRESSLRS_PCB_RX_V3
	-D TARGET_100mW_MODULE
	-DVTABLES_IN_FLASH
	-O3
board_build.f_cpu = 80000000L
src_filter = ${common_env_data.src_rx} ${common_env_data.src_esp82xx}
extra_scripts = ${common_env_data.extra_scripts}

[env:RX_ExpLRS_V3_BetaflightPassthrough]
platform = ${env:RX_ExpLRS_V3.platform}
board = esp8285
framework = arduino
monitor_dtr = 0
monitor_rts = 0
build_flags = ${env:RX_ExpLRS_V3.build_flags}
src_filter = ${env:RX_ExpLRS_V3.src_filter}
extra_scripts = ${common_env_data.extra_scripts}
upload_speed = 115200
upload_protocol = custom
upload_command =
	python python/runpython.py $PYTHONEXE python/BFinitPassthrough.py 115200
	python $PROJECT_PACKAGES_DIR/framework-arduinoespressif32/tools/esptool.py --no-stub -b 115200 -c esp8266 --before no_reset --after soft_reset write_flash 0x0000 $SOURCE
	\penv\Scripts

[env:RX_Mini_v0.1]
platform = ${env:RX_ExpLRS_V3.platform}
board = esp8285
framework = arduino
upload_speed = 921600
monitor_speed = 420000
monitor_dtr = 0
monitor_rts = 0
build_flags = ${env:RX_ExpLRS_V3.build_flags}
board_build.f_cpu = 80000000L
src_filter = ${env:RX_ExpLRS_V3.src_filter}
extra_scripts = ${common_env_data.extra_scripts}

################################# R9 CONFIGS ########################################

[env:RX_R9MM_R9MINI_STLINK]
platform = ststm32@6.0.0
framework = arduino
board = R9MM
build_unflags = -Os
build_flags =
	${common_env_data.flags_rx}
	${common_env_data.flags_stm32}
	-D TARGET_R9M_RX
	-D TARGET_100mW_MODULE
	-D HSE_VALUE=24000000U
	-O3
	-DVECT_TAB_OFFSET=0x08008000U
	-Wl,-Tvariants/R9MM/R9MM_ldscript.ld
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32}
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    BOOTLOADER=bootloader/r9mm_bootloader.bin
    VECT_OFFSET=0x8000

[env:RX_R9MM_R9MINI_BF_Passthrough]
platform = ${env:R9MM_R9MINI_RX_STM32F301_STLINK.platform}
framework = ${env:R9MM_R9MINI_RX_STM32F301_STLINK.framework}
board = ${env:R9MM_R9MINI_RX_STM32F301_STLINK.board}
build_unflags = ${env:R9MM_R9MINI_RX_STM32F301_STLINK.build_unflags}
build_flags = ${env:R9MM_R9MINI_RX_STM32F301_STLINK.build_flags}
src_filter = ${env:R9MM_R9MINI_RX_STM32F301_STLINK.src_filter}
extra_scripts = ${common_env_data.extra_scripts}
upload_protocol = custom
upload_command =
	python python/runpython.py $PYTHONEXE python/BFinitPassthrough.py 420000
	python python/runpython.py $PYTHONEXE python/UARTupload.py $SOURCE

[SKIP_env:RX_R9MM_R9MINI_NATIVE]
platform = ststm32@6.0.0
framework = cmsis
#framework = stm32cube
board = bluepill_f103c8
build_unflags = -Os
build_flags =
	${common_env_data.flags_rx}
	-DICACHE_RAM_ATTR="" -DPLATFORM_STM32=1 -DSTM32F1xx=1 -I${PROJECTSRC_DIR}/stm32_native/
	-D TARGET_R9M_RX
	-D TARGET_100mW_MODULE
	-D HSE_VALUE=24000000U
	-O3
	-DVECT_TAB_OFFSET=0x8000
	-Wl,-Tvariants/R9MM/R9MM_ldscript.ld
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32_native}
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    BOOTLOADER=bootloader/r9mm_bootloader.bin
    VECT_OFFSET=0x8000
board_build.flash_offset = 0x8000


[env:TX_R9M_2018_2W]
platform = ststm32@6.0.0
framework = arduino
board = bluepill_f103c8
build_unflags = -Os
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_stm32}
	-D TARGET_R9M_TX
	-D HSE_VALUE=12000000U
	-O2
src_filter = ${common_env_data.src_tx} ${common_env_data.src_stm32}
extra_scripts = ${common_env_data.extra_scripts}
upload_protocol = stlink

[env:TX_R9M_2018_2W_OpenTX]
platform = ${env:R9M_TX_2018_STM32F301.platform}
framework = ${env:R9M_TX_2018_STM32F301.framework}
board = ${env:R9M_TX_2018_STM32F301.board}
build_unflags = -Os
build_flags =
	${env:R9M_TX_2018_STM32F301.build_flags}
	-DVECT_TAB_OFFSET=0x2000U
	-Wl,-Tvariants/R9M_ldscript.ld
src_filter = ${env:R9M_TX_2018_STM32F301.src_filter}
extra_scripts =
	${common_env_data.extra_scripts}
	python/opentx.py
upload_protocol = custom
upload_flags =
	BOOTLOADER=bootloader/r9m_bootloader.bin
	VECT_OFFSET=0x2000
board_build.flash_offset = 0x2000

[common_env_data]
flags_tx = -DTX_MODULE=1 -DFEATURE_OPENTX_SYNC=1 -I${PROJECTSRC_DIR}
flags_rx = -DRX_MODULE=1 -DNEW_FREQ_CORR=1 -I${PROJECTSRC_DIR}
flags_esp32 = -DPLATFORM_ESP32=1 -I${PROJECTSRC_DIR}/esp32/
flags_esp82xx = -DPLATFORM_ESP8266=1  -I${PROJECTSRC_DIR}/esp82xx/
flags_stm32 = -DICACHE_RAM_ATTR="" -DPLATFORM_STM32=1 -I${PROJECTSRC_DIR}/stm32/
src_filter = +<*.cpp> +<*.c>
src_rx = +<rx/*> ${common_env_data.src_filter}
src_tx = +<tx/*> ${common_env_data.src_filter}
src_esp32 = +<esp32/*>
src_esp82xx = +<esp82xx/*>
src_stm32 = +<stm32/*>
src_stm32_native = +<stm32_native/*>
extra_scripts = pre:python/build_flags.py
